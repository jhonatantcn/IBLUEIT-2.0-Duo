public class TableCodeGen
{
    private const string codeTemplate = @"// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class $CLASS
{
	public class Row
	{
$ROW_MEMBER_CODE
	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded() => isLoaded;

	public List<Row> GetRowList() => rowList;

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		var grid = CsvParser2.Parse(csv.text);

		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
$ROW_READ_CODE
			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows() => rowList.Count

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;

		return rowList[i];
	}

$FIND_CODE
}";

    private const string findCodeTemplate =
@"	public Row Find_$COLUMN(string find) => rowList.Find(x => x.$COLUMN == find);

	public List<Row> FindAll_$COLUMN(string find) => rowList.FindAll(x => x.$COLUMN == find);

";

    public static string Generate(string csvText, string className)
    {
        if (string.IsNullOrEmpty(csvText))
            return null;

        var grid = CsvParser2.Parse(csvText);
        if (grid.Length < 1)
            return null;

        var rowMemberCode = "";
        var rowReadCode = "";
        var findCode = "";
        for (var i = 0; i < grid[0].Length; i++)
        {
            rowMemberCode += $"\t\tpublic string {grid[0][i]};\n";
            rowReadCode += $"\t\t\trow.{grid[0][i]} = grid[i][{i}];\n";
            findCode += findCodeTemplate.Replace("$COLUMN", grid[0][i]);
        }

        var code = codeTemplate;
        code = code.Replace("$CLASS", className);
        code = code.Replace("$ROW_MEMBER_CODE", rowMemberCode);
        code = code.Replace("$ROW_READ_CODE", rowReadCode);
        code = code.Replace("$FIND_CODE", findCode);

        return code;
    }
}